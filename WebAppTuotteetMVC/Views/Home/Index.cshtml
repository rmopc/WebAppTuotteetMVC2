@model WebAppTuotteetMVC.Models.Logins
@{
    ViewBag.Title = "Home Page";
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css"
          integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ"
          crossorigin="anonymous">
}

@section scripts {
    <script type="text/javascript">
        $(window).on('load', function () {
            if (@ViewBag.LoginError == 1) {
                $('#LoginRuutu').modal('show');
            }
        });

        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange', 'Red', 'Blue', 'Yellow', 'Green', 'Black'],
                datasets: [{
                    label: '# of Votes',
                    data: [55, 19, 3, 5, 2, 3, 4, 5, 6, 5, 4,],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(0, 0, 0,0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(0, 0, 0,1)'
                    ],
                    borderWidth: 11
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });

        var ctx2 = document.getElementById('myChart2').getContext('2d');
        var myChart2 = new Chart(ctx2, {
            type: 'line',
            data: {
                labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                datasets: [{
                    label: '# of Votes',
                    data: [12, 19, 3, 5, 2, 3],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
        var ctx3 = document.getElementById('myChart3').getContext('2d');
        var myChart3 = new Chart(ctx3, {
            type: 'pie',
            data: {
                labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                datasets: [{
                    label: '# of Votes',
                    data: [12, 19, 3, 5, 2, 3],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });

    </script>
    
    
    } 

<div class="jumbotron">
    <h1>Ronie's MVC Demo app</h1>
    @if (Session["UserName"] == null)
    {
        <p class="lead">Welcome to my demo app. Please login to access the database.</p>
        @*<p><a href="~/Home/Login" class="btn btn-primary btn-lg">Login &raquo;</a></p>*@

        <!-- Button to Open the Modal -->
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#LoginRuutu">
            @*Huom tuo data-bs koska Bootstrap 5!*@
            Login
        </button>

        <!-- The Modal -->
        <div class="modal" id="LoginRuutu">
            <div class="modal-dialog">
                <div class="modal-content">

                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Login</h4>
                        <a href="@Url.Action("Index", "Home")" class="btn btn-primary"><i class="fas fa-times"></i></a>
                    </div>

                    <!-- Modal body -->
                    <div class="modal-body">
                        @using (Html.BeginForm("Authorize", "Home", FormMethod.Post, new { id = "loginForm" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.LoginId)

                                <div class="form-group">
                                    @Html.LabelFor(model => model.UserName, "Username:", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <label class="text-danger">
                                    @Html.DisplayFor(model => model.LoginErrorMessage)
                                </label>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PassWord, "Password:", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.PassWord, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PassWord, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="btn-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Login" class="btn btn-primary" />
                                        </div>
                                    </div>*@
                            </div>
                        }
                    </div>

                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <div>
                            <button type="submit" class="btn btn-primary" form="loginForm"><i class="fas fa-check"></i> Kirjaudu</button>
                            <a href="@Url.Action("Index", "Home")" class="btn btn-primary"><i class="fas fa-times"></i> Peruuta</a>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <hr />
        <div class="container-fluid">
            <h5>Kovakoodatut chartit:</h5>
            <div class="row">
                <div class="col-sm-4">
                    <canvas id="myChart"></canvas>
                </div>
                <div class="col-sm-4">
                    <canvas id="myChart2"></canvas>
                </div>
                <div class="col-sm-4">
                    <canvas id="myChart3"></canvas>
                </div>
            </div>
        </div>
    }
    @if (Session["UserName"] != null)
    {
        <p class="lead">Logged in as user @Session["UserName"].ToString(). Access to the database is available.</p>
    }

</div>



