@model WebAppTuotteetMVC.Models.Tilaukset

<div class="modal fade" id="ModalOrderCreate">

    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Create order</h3>
            </div>
            <div class="modal-body">
                @*Modal -tyyppisen ikkunan koodiesimerkki - alkuperäisen lomakkeen koodi alkaa*@
                @using (Html.BeginForm("Create", "Tilaukset", FormMethod.Post, new { id = "createForm" }))
                {
                    @Html.AntiForgeryToken()
                    <h4>Tilaukset</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.AsiakasID, "AsiakasID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("AsiakasID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AsiakasID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Toimitusosoite, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Toimitusosoite, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Toimitusosoite, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Postinumero, "Postinumero", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("Postinumero", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Postinumero, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Tilauspvm, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Tilauspvm, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Tilauspvm, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Toimituspvm, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Toimituspvm, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Toimituspvm, "", new { @class = "text-danger" })
                        </div>
                    </div>


        }
            </div>
            <div class="modal-footer">
                <div>
                    @*Formin lähettävä button, joka ei kuitenkaan ole formin sisällä, mutta viittaa formin ID:hen*@
                    <button type="submit" class="btn btn-primary" form="createForm"><i class="fas fa-plus-square"></i></button>
                    @*Kontrollerin kutsu Url.Action -komennolla, jotta peruuttaminen johtaa alkutilanteeseen*@
                    <a href="@Url.Action("Index", "Tilaukset")" class="btn btn-primary"><i class="fas fa-times"></i></a>
                </div>
            </div>

        </div>
     </div>
 </div>